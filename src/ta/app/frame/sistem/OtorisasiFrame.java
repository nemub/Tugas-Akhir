/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OtorisasiFrame.java
 *
 * Created on Oct 5, 2013, 8:44:31 PM
 */
package ta.app.frame.sistem;

import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import ta.util.orm.MasterQuery;
import ta.util.orm.mapping.Akses;
import ta.util.orm.mapping.Pengguna;

/**
 *
 * @author Sahal
 */
public class OtorisasiFrame extends javax.swing.JInternalFrame {

    private final DefaultListModel userModel = new DefaultListModel();
    private List<Pengguna> listUser;
    private final MasterQuery<Pengguna> queryUser = new MasterQuery<Pengguna>();
    private final MasterQuery<Akses> query = new MasterQuery<Akses>();

    /**
     * Creates new form OtorisasiFrame
     */
    public OtorisasiFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        penggunaList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        namaTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        hakAksesTxt = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        simpanBtn = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Otorisasi");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Pengguna Aplikasi"));

        penggunaList.setModel(userModel);
        penggunaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        penggunaList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                penggunaListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(penggunaList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("NIK");

        namaTxt.setEditable(false);

        passwordTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTxtKeyPressed(evt);
            }
        });

        jLabel2.setText("Password");

        hakAksesTxt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admin", "Inspector", "Pengguna", "Pimpinan" }));
        hakAksesTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hakAksesTxtKeyPressed(evt);
            }
        });

        jLabel9.setText("Hak Akses");

        simpanBtn.setText("Simpan");
        simpanBtn.setEnabled(false);
        simpanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(namaTxt)
                            .addComponent(hakAksesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(simpanBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(namaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hakAksesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(123, 123, 123)
                        .addComponent(simpanBtn))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            passwordTxt.transferFocus();
        }
    }//GEN-LAST:event_passwordTxtKeyPressed

    private void hakAksesTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hakAksesTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saving();
        }
    }//GEN-LAST:event_hakAksesTxtKeyPressed

    private void simpanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanBtnActionPerformed
        saving();
    }//GEN-LAST:event_simpanBtnActionPerformed

    private void penggunaListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_penggunaListValueChanged
        if (penggunaList.getSelectedValue() != null) {
            Pengguna pengguna = listUser.get(penggunaList.getSelectedIndex());
            Akses akses = query.detail("Akses", "pengguna", String.valueOf(pengguna.getIdPengguna()));

            if (akses != null) {
                passwordTxt.setText(akses.getSandi());
                hakAksesTxt.setSelectedItem(akses.getHak());
            } else {
                defaultView();
            }

            simpanBtn.setEnabled(true);
            namaTxt.setText(pengguna.getNik());
            penggunaList.transferFocus();
        }
    }//GEN-LAST:event_penggunaListValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox hakAksesTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namaTxt;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JList penggunaList;
    private javax.swing.JButton simpanBtn;
    // End of variables declaration//GEN-END:variables

    public void fill() {
        userModel.clear();
        listUser = queryUser.getListData("Pengguna");

        for (Pengguna user : listUser) {
            userModel.addElement(user.getNik());
        }

        penggunaList.transferFocus();
    }

    private void defaultView() {
        simpanBtn.setEnabled(false);
        namaTxt.setText("");
        passwordTxt.setText("");
        hakAksesTxt.setSelectedIndex(0);
        penggunaList.setSelectedIndex(listUser.size());
        penggunaList.transferFocus();
    }

    private void saving() {
        String msg = "Perubahan data hak akses pengguna ";
        boolean action = false, result = false;

        if (String.valueOf(passwordTxt.getPassword()).isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mohon isikan terlebih dahulu Password", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            if (String.valueOf(passwordTxt.getPassword()).length() <= 12) {
                Pengguna user = queryUser.detail("Pengguna", "nik", namaTxt.getText());

                if (user != null) {
                    Akses akses = query.detail("Akses", "pengguna", String.valueOf(user.getIdPengguna()));

                    if (akses == null) {
                        akses = new Akses(user, String.valueOf(passwordTxt.getPassword()), String.valueOf(hakAksesTxt.getSelectedItem()));
                        action = query.action(akses, MasterQuery.ADD);
                        result = true;
                    } else {
                        akses.setSandi(String.valueOf(passwordTxt.getPassword()));
                        akses.setHak(String.valueOf(hakAksesTxt.getSelectedItem()));
                        action = query.action(akses, MasterQuery.UPDATE);
                        result = true;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Jumlah huruf untuk Password melebihi batas ketentuan", "Peringatan", JOptionPane.WARNING_MESSAGE);
            }
        }

        if (result) {
            JOptionPane.showMessageDialog(this, msg + ((action) ? "berhasil " : "gagal ") + "diproses", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }

        fill();
        defaultView();
    }

}
