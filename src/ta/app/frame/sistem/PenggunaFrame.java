/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PenggunaFrame.java
 *
 * Created on Oct 5, 2013, 8:44:15 PM
 */
package ta.app.frame.sistem;

import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import ta.util.orm.MasterQuery;
import ta.util.orm.mapping.Akses;
import ta.util.orm.mapping.Pengguna;

/**
 *
 * @author Sahal
 */
public class PenggunaFrame extends javax.swing.JInternalFrame {

    private final DefaultListModel userModel = new DefaultListModel();
    private List<Pengguna> listUser;
    private final MasterQuery<Pengguna> queryUser = new MasterQuery<Pengguna>();
    // global var
    private Akses authorized;

    /**
     * Creates new form PenggunaFrame
     */
    public PenggunaFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        penggunaList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        nikTxt = new javax.swing.JTextField();
        namaTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bagianTxt = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jabatanTxt = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        hapusBtn = new javax.swing.JButton();
        simpanBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Pengguna");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Daftar Pengguna Aplikasi"));

        penggunaList.setModel(userModel);
        penggunaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        penggunaList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                penggunaListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(penggunaList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("NIK ");

        nikTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nikTxtKeyPressed(evt);
            }
        });

        namaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                namaTxtKeyPressed(evt);
            }
        });

        jLabel1.setText("Nama ");

        bagianTxt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Quality", "Produksi", "Maintenance", "Engineering" }));
        bagianTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bagianTxtKeyPressed(evt);
            }
        });

        jLabel3.setText("Bagian ");

        jabatanTxt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Worker", "Ast.Foreman", "Foreman", "Supervisor", "Manager" }));
        jabatanTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jabatanTxtKeyPressed(evt);
            }
        });

        jLabel4.setText("Jabatan");

        hapusBtn.setText("Hapus");
        hapusBtn.setEnabled(false);
        hapusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusBtnActionPerformed(evt);
            }
        });

        simpanBtn.setText("Simpan");
        simpanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(simpanBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hapusBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nikTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jabatanTxt, javax.swing.GroupLayout.Alignment.LEADING, 0, 111, Short.MAX_VALUE)
                                .addComponent(bagianTxt, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nikTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(namaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bagianTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jabatanTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(hapusBtn)
                                    .addComponent(simpanBtn)))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanBtnActionPerformed
        saving();
    }//GEN-LAST:event_simpanBtnActionPerformed

    private void hapusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusBtnActionPerformed
        String name = namaTxt.getText();

        if (nikTxt.getText().equals("000")) {
            JOptionPane.showMessageDialog(this, "Pengguna admin tidak dapat dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data pengguna [" + name + "] ?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (confirm == JOptionPane.OK_OPTION) {
                Pengguna user = queryUser.detail("Pengguna", "nik", nikTxt.getText());

                if (user != null) {
                    boolean action = queryUser.action(user, MasterQuery.DELETE);
                    JOptionPane.showMessageDialog(this, "Pengguna [" + name + "] " + ((action) ? "berhasil " : "gagal ") + "dihapus", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    fill(authorized);
                }
            }
        }

        defaultView();
    }//GEN-LAST:event_hapusBtnActionPerformed

    private void penggunaListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_penggunaListValueChanged
        if (penggunaList.getSelectedValue() != null) {
            if (penggunaList.getSelectedValue().equals("[Tambah Pengguna Baru]")) {
                defaultView();
            } else {
                Pengguna pengguna = listUser.get(penggunaList.getSelectedIndex());
                nikTxt.setEditable(false);
                hapusBtn.setEnabled(!pengguna.getNik().equals("000"));
                nikTxt.setText(pengguna.getNik());
                namaTxt.setText(pengguna.getNama());
                bagianTxt.setSelectedItem(pengguna.getBagian());
                jabatanTxt.setSelectedItem(pengguna.getJabatan());
                nikTxt.transferFocus();
            }
        }

        auth();
    }//GEN-LAST:event_penggunaListValueChanged

    private void nikTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nikTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nikTxt.transferFocus();
        }
    }//GEN-LAST:event_nikTxtKeyPressed

    private void namaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            namaTxt.transferFocus();
        }
    }//GEN-LAST:event_namaTxtKeyPressed

    private void bagianTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bagianTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            bagianTxt.transferFocus();
        }
    }//GEN-LAST:event_bagianTxtKeyPressed

    private void jabatanTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jabatanTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saving();
        }
    }//GEN-LAST:event_jabatanTxtKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bagianTxt;
    private javax.swing.JButton hapusBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jabatanTxt;
    private javax.swing.JTextField namaTxt;
    private javax.swing.JTextField nikTxt;
    private javax.swing.JList penggunaList;
    private javax.swing.JButton simpanBtn;
    // End of variables declaration//GEN-END:variables

    public void fill(Akses authorized) {
        this.authorized = authorized;
        userModel.clear();
        listUser = queryUser.getListData("Pengguna");

        for (Pengguna user : listUser) {
            userModel.addElement(user.getNik());
        }

        userModel.addElement("[Tambah Pengguna Baru]");
        penggunaList.transferFocus();
        auth();
    }

    private void defaultView() {
        nikTxt.setEditable(true);
        hapusBtn.setEnabled(false);
        nikTxt.setText("");
        namaTxt.setText("");
        bagianTxt.setSelectedIndex(0);
        jabatanTxt.setSelectedIndex(0);
        penggunaList.setSelectedIndex(listUser.size());
        penggunaList.transferFocus();
        auth();
    }

    private void saving() {
        String msg = "Perubahan data pengguna ";
        boolean action = false, result = false;

        if (nikTxt.getText().isEmpty() || namaTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mohon isikan terlebih dahulu NIK dan Nama", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            if (nikTxt.getText().length() <= 5 && namaTxt.getText().length() <= 20) {
                Pengguna user = queryUser.detail("Pengguna", "nik", nikTxt.getText());

                if (user == null) {
                    user = new Pengguna();
                    user.setIdPengguna(0);
                }

                user.setNik(nikTxt.getText());
                user.setNama(namaTxt.getText());
                user.setBagian(String.valueOf(bagianTxt.getSelectedItem()));
                user.setJabatan(String.valueOf(jabatanTxt.getSelectedItem()));

                if (nikTxt.isEditable()) {
                    if (user.getIdPengguna() == 0) {
                        action = queryUser.action(user, MasterQuery.ADD);
                        result = true;
                    } else {
                        JOptionPane.showMessageDialog(this, "Pengguna dengan NIK [" + user.getNik() + "] sudah terdaftar", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    action = queryUser.action(user, MasterQuery.UPDATE);
                    result = true;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Jumlah huruf untuk NIK atau Nama melebihi batas ketentuan", "Peringatan", JOptionPane.WARNING_MESSAGE);
            }
        }

        if (result) {
            JOptionPane.showMessageDialog(this, msg + ((action) ? "berhasil " : "gagal ") + "diproses", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }

        fill(authorized);
        defaultView();
    }

    private void auth() {
        if (authorized.getHak().equals("Pengguna") || authorized.getHak().equals("Pimpinan")) {
            hapusBtn.setEnabled(false);
            simpanBtn.setEnabled(false);
        }
    }

}
